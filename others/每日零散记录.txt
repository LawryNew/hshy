截取sql慢日志一段日志 打包下载：

sed -n ' A , Bp'  mysql-slow.log  >>  slowlog_07.log



10.23.1.17


10.23.1.13
255.255.255.0
10.23.1.1
8888
8844


##解压到指定目录
tar  -zxvf  xxx.tgz  -C  /path
zip -r xxx.zip  -d /path



做内网转发伪装登录  

伪装的只是  ip(转发的开放外网的内网主机的ip) 和映射端口
用户名和密码或者密钥都还市本机生成


api公钥扔给 club   api可以登录club



排错日志查看：


journalctl -e -u  nginx/tomcat/apiserver



redis-cli -h php.redis.com -p 6389  -a qiezi     monitor |grep tasks



在不重启mysql情况下修改 my.cnf中的参数

在数据库中执行 set global  innodb_buff_......

清楚sed注释行 留下有用内容：
sed  "/#/"d  config   >> /etc/config


没想到躲了那么久，还是躲不了
明知不可为，可还是偏偏要为之


uname -r


top -bn1 ###非动态显示负载  
top  按c 显示详细进程



/etc/profile 加载后 ls vim 很多系统命令无法使用怎么办？？？
export PATH=/usr/bin:/usr/sbin:/bin:/sbin:/usr/X11R6/bin 或者reboot重新加载


vim里的替换：

:%s/old/new/g


shell  EOF :

1.
eof之间的文本  会传给 eof之前的命令 类似 管道后置便于输入
因为：  cmd  << eof 
xxxxx
eof

有一个 <<


2.

cat <<eof  >> test.sh
wer
wer
wer
eof

把eof之间的文本 管道给 cat  ，
然后cat打印后 >> 写入 test.sh


及时在
git config --global 和上传密钥之后
push时还要  手动输入 名字和密码认证
git remote set-url 还是无效  不是 https或者http://git@github.com/username/reponame.git###而是 git+ssh 跟上仓库地址
git remote set-url origin git+ssh://git@github.com/username/reponame.git
###这是整呢格式，set-url 不是https/http 跟上仓库地址，而是git+ssh跟上